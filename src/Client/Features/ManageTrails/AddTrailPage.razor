@page "/add-trail"
@using Blazored.FluentValidation
@using Wasm.Shared.Features.ManageTrails

<PageTitle>Add Trail - Blazing Trails</PageTitle>

<nav aria-label="breadcrumb">
  <ol class="breadcrumb">
    <li class="breadcrumb-item">
      <a href="/">Home</a>
    </li>
    <li class="breadcrumb-item active" aria-current="page">Add Trail</li>
  </ol>
</nav>

<h3 class="mt-5 mb-4">Add a trail</h3>

<EditForm Model="trail" OnValidSubmit="SubmitForm">
    <FluentValidationValidator />
  <div class="mt-4 mb-5">
    <div class="row">
      <FormSection Title="Basic Details" HelpText="This information is used to identify the trail and can be searched to help hiker find it.">
        <FormFieldSet Width="col-6">
          <label for="trailName" class="font-weight-bold text-secondary">Name</label>
          <InputText id="trailName" class="form-control" @bind-Value="trail.Name" />
          <ValidationMessage For="() => trail.Name" />
        </FormFieldSet>
        <FormFieldSet>
          <label for="trailDescription" class="font-weight-bold text-secondary">Description</label>
          <InputTextArea @bind-Value="trail.Description" rows="6" class="form-control" id="trailDescription" />
          <ValidationMessage For="() => trail.Description" />
        </FormFieldSet>
        <FormFieldSet Width="col-6">
          <label for="trailLocation" class="font-weight-bold text-secondary">Location</label>
          <InputText @bind-Value="trail.Location" class="form-control" id="trailLocation" />
          <ValidationMessage For="() => trail.Location" />
        </FormFieldSet>
      </FormSection>

      <FormSection Title="Difficulty" HelpText="Help other hikers out by telling them the length of the trail
                                    is how long it might take them.">
        <FormFieldSet Width="col-3">
          <label for="trailLength" class="font-weight-bold text-secondary">Length (km)</label>
          <InputNumber id="trailLength" class="form-control" @bind-Value="trail.Length"></InputNumber>
          <ValidationMessage For="() => trail.Length" />
        </FormFieldSet>
      </FormSection>

      <FormSection Title="Route Instructions" HelpText="Route instructions are a guide for the trail.
                                                              This helps hikers new to the trail stay on track.">
        @for (var i = 0; i < trail.Route.Count; ++i)
        {
          var routeInstruction = trail.Route[i];
          var stage = i + 1;
          routeInstruction.Stage = stage;
          var cid = $"rid-{stage}";

          <div class="row">
            <div class="col-2">
              <div class="form-group">
                <label class="font-weight-bold text-secondary">Stage</label>
                <p>@routeInstruction.Stage</p>
              </div>
            </div>

            <div class="col">
              <div class="form-group">
                <label for="@cid" class="front-weight-bold text-secondary">Description</label>
                <InputText id="@cid" class="form-control" @bind-Value="routeInstruction.Description" />
                <ValidationMessage For="() => routeInstruction.Description" />
              </div>
            </div>
            <div class="col-1 d-flex mt-3">
              <button type="button" class="btn btn-link" @onclick="() => trail.Route.Remove(routeInstruction)">
                <svg width="1em" height="1em" viewBox="0 0 16 16" class="bi bi-x-circle-fill text-danger" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
                  <path fill-rule="evenodd" d="M16 8A8 8 0 1 1 0
                         8a8 8 0 0 1 16 0zM5.354 4.646a.5.5 0 1
                         0-.708.708L7.293 8l-2.647 2.646a.5.5
                         0 0 0 .708.708L8 8.707l2.646 2.647a.5.5 0 0 0
                         .708-.708L8.707 8l2.647-2.646a.5.5 0 0
                         0-.708-.708L8 7.293 5.354 4.646z" />
                </svg>
              </button>
            </div>
          </div>
        }

        <div class="row">
          <div class="col">
            <button type="button" class="btn btn-outline-primary" @onclick="() => trail.Route.Add(new())">Add Instruction</button>
            <ValidationMessage For="() => trail.Route" />
          </div>
        </div>
      </FormSection>
    </div>
    <div class="row">
      <div class="offset-4 col-8 text-right">
        <button type="button" class="btn btn-outline-secondary" @onclick="() => trail = new()">Reset</button>
        <button type="submit" class="btn btn-primary">Submit</button>
      </div>
    </div>
  </div>
</EditForm>

@code {
  TrailViewModel trail = new();

  Task SubmitForm() { return Task.CompletedTask; }

}